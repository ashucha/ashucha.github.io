{"version":3,"sources":["components/Navbar.js","components/Terminal.js","components/Home.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","React","Component","Terminal","showDevServer","localStorage","setItem","code","document","getElementById","innerHTML","setTimeout","shellAnimation","classList","add","style","display","getItem","id","icon","faCircle","speed","onFinishedTyping","this","Delay","ms","Home","loop","Backspace","count","delay","Projects","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kQA8BeA,E,uKAxBX,OACE,yBAAKC,UAAU,UACb,kBAAC,OAAD,CAAMC,GAAG,SAASD,UAAU,gBAA5B,QAGA,yBAAKA,UAAU,cACb,4BACE,wBAAIA,UAAU,YACZ,kBAAC,WAAD,CAAUC,GAAG,UAAUD,UAAU,YAAjC,UAIF,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAMC,GAAG,YAAYD,UAAU,YAA/B,oB,GAfOE,IAAMC,W,iCCkEZC,E,4MAhEbC,cAAgB,WACdC,aAAaC,QAAQ,WAAW,GAChC,IAAMC,EAAOC,SAASC,eAAe,aACrCF,EAAKG,WAAL,yJAKAC,YAAW,WACTJ,EAAKG,WAAL,iPAKC,KAEHC,YAAW,WACT,IAAMC,EAAiBJ,SAASC,eAAe,kBAC/CG,EAAeC,UAAUC,IAAI,YAC7BH,YAAW,WACTC,EAAeG,MAAMC,QAAU,SAC9B,OACF,M,uDAIH,OACE,yBAAKjB,UAAU,aACwB,UAApCM,aAAaY,QAAQ,WACpB,6BAASlB,UAAU,kBAAkBmB,GAAG,kBACtC,yBAAKnB,UAAU,SACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEoB,KAAMC,IACNrB,UAAU,yBAEZ,kBAAC,IAAD,CACEoB,KAAMC,IACNrB,UAAU,4BAEZ,kBAAC,IAAD,CACEoB,KAAMC,IACNrB,UAAU,4BAGd,yBAAKA,UAAU,cACb,0BAAMmB,GAAG,aACP,kBAAC,IAAD,CAAQG,MAAO,IAAKC,iBAAkBC,KAAKnB,eAA3C,OACM,kBAAC,IAAOoB,MAAR,CAAcC,GAAI,MADxB,wBAIA,iCAMR,mC,GA1DaxB,IAAMC,WCgCdwB,E,4MAjCbtB,cAAgB,WAEd,IAAMQ,EAAiBJ,SAASC,eAAe,kBAC/CG,EAAeC,UAAUC,IAAI,YAC7BH,YAAW,WACTC,EAAeG,MAAMC,QAAU,SAC9B,M,uDAIH,OACE,yBAAKjB,UAAU,aACb,6BAASA,UAAU,UAAUmB,GAAG,kBAC9B,wBAAInB,UAAU,kBACZ,kBAAC,IAAD,CAAQsB,MAAO,GAAIM,MAAM,GACvB,oEACA,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MACpC,uDACA,kBAAC,IAAOF,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MACpC,+DACA,kBAAC,IAAOF,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MACpC,mDACA,kBAAC,IAAOF,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MACpC,+CACA,kBAAC,IAAOF,UAAR,CAAkBC,MAAO,GAAIC,MAAO,c,GAzB/B7B,IAAMC,WCSV6B,E,uKARX,OACE,yBAAKhC,UAAU,aACb,6C,GAJeE,IAAMC,WCyBd8B,E,uKAfX,OACE,kBAAC,gBAAD,KACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,YAAYE,UAAWJ,W,GAT7B9B,IAAMC,WCEJkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASC,eAAe,SD0HpB,kBAAmBmC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.18cbe039.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <Link to=\"/#home\" className=\"navbar-brand\">\r\n          ASHU\r\n        </Link>\r\n        <nav className=\"navbar-nav\">\r\n          <ul>\r\n            <li className=\"nav-item\">\r\n              <HashLink to=\"/#about\" className=\"nav-link\">\r\n                About\r\n              </HashLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/projects\" className=\"nav-link\">\r\n                Projects\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Typing from \"react-typing-animation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Terminal extends React.Component {\r\n  showDevServer = () => {\r\n    localStorage.setItem(\"animate\", false);\r\n    const code = document.getElementById(\"shellText\");\r\n    code.innerHTML += `<span class=\"text-blue\">\r\n                           Starting the development server...\r\n                       </span>\r\n                       <br />`;\r\n\r\n    setTimeout(() => {\r\n      code.innerHTML += `<span class=\"text-green\">\r\n                           The app is running at: http://localhost:3000\r\n                           <br />\r\n                           Or on your network: http://10.0.0.0:3000\r\n                         </span>`;\r\n    }, 5000);\r\n\r\n    setTimeout(() => {\r\n      const shellAnimation = document.getElementById(\"shellAnimation\");\r\n      shellAnimation.classList.add(\"slide-up\");\r\n      setTimeout(() => {\r\n        shellAnimation.style.display = \"none\";\r\n      }, 750);\r\n    }, 6000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {localStorage.getItem(\"animate\") !== \"false\" ? (\r\n          <section className=\"shell-animation\" id=\"shellAnimation\">\r\n            <div className=\"shell\">\r\n              <div className=\"shell-topbar\">\r\n                <FontAwesomeIcon\r\n                  icon={faCircle}\r\n                  className=\"shell-icon shell-red\"\r\n                ></FontAwesomeIcon>\r\n                <FontAwesomeIcon\r\n                  icon={faCircle}\r\n                  className=\"shell-icon shell-yellow\"\r\n                ></FontAwesomeIcon>\r\n                <FontAwesomeIcon\r\n                  icon={faCircle}\r\n                  className=\"shell-icon shell-green\"\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n              <div className=\"shell-body\">\r\n                <code id=\"shellText\">\r\n                  <Typing speed={150} onFinishedTyping={this.showDevServer}>\r\n                    ~ $ <Typing.Delay ms={500}></Typing.Delay>cd ashu && npm\r\n                    start\r\n                  </Typing>\r\n                  <br />\r\n                </code>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Terminal;\r\n","import React from \"react\";\r\nimport Typing from \"react-typing-animation\";\r\n\r\nclass Home extends React.Component {\r\n  showDevServer = () => {\r\n    // localStorage.setItem(\"animate\", false);\r\n    const shellAnimation = document.getElementById(\"shellAnimation\");\r\n    shellAnimation.classList.add(\"slide-up\");\r\n    setTimeout(() => {\r\n      shellAnimation.style.display = \"none\";\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <section className=\"landing\" id=\"shellAnimation\">\r\n          <h1 className=\"landing-header\">\r\n            <Typing speed={10} loop={true}>\r\n              <span>Enthusiastic full-stack developer.</span>\r\n              <Typing.Backspace count={35} delay={1000}></Typing.Backspace>\r\n              <span>Aspiring AI engineer.</span>\r\n              <Typing.Backspace count={22} delay={1000}></Typing.Backspace>\r\n              <span>Curious aerospace enthusiast.</span>\r\n              <Typing.Backspace count={30} delay={1000}></Typing.Backspace>\r\n              <span>Effective leader.</span>\r\n              <Typing.Backspace count={18} delay={1000}></Typing.Backspace>\r\n              <span>Avid learner.</span>\r\n              <Typing.Backspace count={14} delay={1000}></Typing.Backspace>\r\n            </Typing>\r\n          </h1>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Projects</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Navbar from \"./components/Navbar\";\r\nimport Terminal from \"./components/Terminal\";\r\nimport Home from \"./components/Home\";\r\nimport Projects from \"./components/Projects\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar></Navbar>\r\n          <Terminal></Terminal>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home}></Route>\r\n            <Route path=\"/projects\" component={Projects}></Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}